---
- name: Get latest release number of CyberChef
  shell: 
    cmd: curl -I -s -L https://github.com/gchq/CyberChef/releases/latest/download | grep -i location | awk -F '/' '{print $NF}'
    executable: /bin/bash
  register: cyberchef_version
  changed_when: false

- name: Get Currently installed CyberChef version
  shell: 
    cmd: ls /opt/CyberChef/ | grep -i html | awk -F '_' '{print $2}' | cut -d '.' -f1-3
    executable: /bin/bash
  register: current_cyberchef_version
  changed_when: false

- name: Remove outdated CyberChef
  file:
    path: "/opt/CyberChef/"
    state: absent
  become: true
  become_method: sudo
  when: cyberchef_version.stdout != current_cyberchef_version.stdout

- name: Download latest Cyberchef release
  uri:
    url: "https://github.com/gchq/CyberChef/releases/latest/download/CyberChef_{{ cyberchef_version.stdout }}.zip"
    dest: "/tmp/"
    status_code: 200, 304
  when: cyberchef_version.stdout != current_cyberchef_version.stdout

- name: Create Destination Directory
  file:
    path: "/opt/CyberChef/"
    state: directory
    mode: 0755
    owner: root
    group: root
  become: true
  become_method: sudo

- name: Unzip CyberChef
  unarchive:
    src: "/tmp/CyberChef_{{ cyberchef_version.stdout }}.zip"
    dest: "/opt/CyberChef/"
    remote_src: yes
    creates: "/tmp/CyberChef_{{ cyberchef_version.stdout }}.html"
  become: true
  become_method: sudo
  when: cyberchef_version.stdout != current_cyberchef_version.stdout

- name: Clean up downloaded zip file
  file:
    path: "/tmp/CyberChef_{{ cyberchef_version.stdout }}.zip"
    state: absent
  when: cyberchef_version.stdout != current_cyberchef_version.stdout
